<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperSocket.Common.1.5.4.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SuperSocketCommonDelegates">
            <summary>Contains custom delegates used for the stubs and shims of SuperSocket.Common</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimArraySegmentList">
            <summary>Shim type of SuperSocket.Common.ArraySegmentList</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.#ctor(SuperSocket.Common.ArraySegmentList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.Bind(System.Collections.Generic.ICollection{System.Byte})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.Bind(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList.Bind(System.Collections.Generic.IList{System.Byte})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.Constructor">
            <summary>Sets the shim of ArraySegmentList.ArraySegmentList()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.DecodeEncoding">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.DecodeEncodingInt32Int32">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.DecodeMaskByteArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList.DecodeMask(Byte[] mask, Int32 offset, Int32 length)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimArraySegmentList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.AllInstances.DecodeEncoding">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.AllInstances.DecodeEncodingInt32Int32">
            <summary>Sets the shim of ArraySegmentList.Decode(Encoding encoding, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList.AllInstances.DecodeMaskByteArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList.DecodeMask(Byte[] mask, Int32 offset, Int32 length)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimArraySegmentList`1">
            <summary>Shim type of SuperSocket.Common.ArraySegmentList`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.#ctor(SuperSocket.Common.ArraySegmentList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimArraySegmentList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AddSegmentT0ArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AddSegmentT0ArrayInt32Int32Boolean">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length, Boolean toBeCopied)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AddT0">
            <summary>Sets the shim of ArraySegmentList`1.Add(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.Clear">
            <summary>Sets the shim of ArraySegmentList`1.Clear()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.ClearSegements">
            <summary>Sets the shim of ArraySegmentList`1.ClearSegements()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.Constructor">
            <summary>Sets the shim of ArraySegmentList`1.ArraySegmentList`1()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.ContainsT0">
            <summary>Sets the shim of ArraySegmentList`1.Contains(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.CopyToT0Array">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.CopyToT0ArrayInt32Int32Int32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to, Int32 srcIndex, Int32 toIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.CountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.GetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.IndexOfT0">
            <summary>Sets the shim of ArraySegmentList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.InsertInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.IsReadOnlyGet">
            <summary>Sets the shim of ArraySegmentList`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.ItemGetInt32">
            <summary>Sets the shim of ArraySegmentList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.ItemSetInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.RemoveAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.RemoveSegmentAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveSegmentAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.RemoveT0">
            <summary>Sets the shim of ArraySegmentList`1.Remove(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.SearchLastSegmentSearchMarkStateOfT0">
            <summary>Sets the shim of ArraySegmentList`1.SearchLastSegment(SearchMarkState`1&lt;!0&gt; state)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.SegmentCountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_SegmentCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.ToArrayData">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.ToArrayDataInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData(Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.TrimEndInt32">
            <summary>Sets the shim of ArraySegmentList`1.TrimEnd(Int32 trimSize)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.AddSegmentT0ArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.AddSegmentT0ArrayInt32Int32Boolean">
            <summary>Sets the shim of ArraySegmentList`1.AddSegment(!0[] array, Int32 offset, Int32 length, Boolean toBeCopied)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.AddT0">
            <summary>Sets the shim of ArraySegmentList`1.Add(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.Clear">
            <summary>Sets the shim of ArraySegmentList`1.Clear()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.ClearSegements">
            <summary>Sets the shim of ArraySegmentList`1.ClearSegements()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.ContainsT0">
            <summary>Sets the shim of ArraySegmentList`1.Contains(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.CopyToT0Array">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.CopyToT0ArrayInt32Int32Int32">
            <summary>Sets the shim of ArraySegmentList`1.CopyTo(!0[] to, Int32 srcIndex, Int32 toIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.CountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of ArraySegmentList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ArraySegmentList`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ArraySegmentList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of ArraySegmentList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.RemoveSegmentAtInt32">
            <summary>Sets the shim of ArraySegmentList`1.RemoveSegmentAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.RemoveT0">
            <summary>Sets the shim of ArraySegmentList`1.Remove(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.SearchLastSegmentSearchMarkStateOfT0">
            <summary>Sets the shim of ArraySegmentList`1.SearchLastSegment(SearchMarkState`1&lt;!0&gt; state)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.SegmentCountGet">
            <summary>Sets the shim of ArraySegmentList`1.get_SegmentCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ArraySegmentList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.ToArrayData">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.ToArrayDataInt32Int32">
            <summary>Sets the shim of ArraySegmentList`1.ToArrayData(Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimArraySegmentList`1.AllInstances.TrimEndInt32">
            <summary>Sets the shim of ArraySegmentList`1.TrimEnd(Int32 trimSize)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimAssemblyUtil">
            <summary>Shim type of SuperSocket.Common.AssemblyUtil</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.BinaryCloneOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of AssemblyUtil.BinaryClone(!!0 target)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.CopyPropertiesToOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,``0})">
            <summary>Sets the shim of AssemblyUtil.CopyPropertiesTo(!!0 source, !!0 target)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.CreateInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of AssemblyUtil.CreateInstance(String type)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.CreateInstanceOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Sets the shim of AssemblyUtil.CreateInstance(String type, Object[] parameters)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.GetImplementTypesOf1Assembly``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.Assembly,System.Collections.Generic.IEnumerable{System.Type}})">
            <summary>Sets the shim of AssemblyUtil.GetImplementTypes(Assembly assembly)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.GetImplementedObjectsByInterfaceOf1Assembly``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.Assembly,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of AssemblyUtil.GetImplementedObjectsByInterface(Assembly assembly)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil.GetImplementedObjectsByInterfaceOf1AssemblyType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.Assembly,System.Type,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of AssemblyUtil.GetImplementedObjectsByInterface(Assembly assembly, Type targetType)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil._CopyPropertiesTob__1Of1PropertyInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.PropertyInfo,System.String})">
            <summary>Sets the shim of AssemblyUtil.&lt;CopyPropertiesTo&gt;b__1(PropertyInfo p)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimAssemblyUtil._GetImplementTypesb__0Of1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Boolean})">
            <summary>Sets the shim of AssemblyUtil.&lt;GetImplementTypes&gt;b__0(Type t)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimAssemblyUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimAssemblyUtil.GetAssembliesFromStringString">
            <summary>Sets the shim of AssemblyUtil.GetAssembliesFromString(String assemblyDef)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimAssemblyUtil.GetAssembliesFromStringsStringArray">
            <summary>Sets the shim of AssemblyUtil.GetAssembliesFromStrings(String[] assemblies)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimAssemblyUtil.StaticConstructor">
            <summary>Sets the shim of AssemblyUtil.AssemblyUtil()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimBinaryUtil">
            <summary>Shim type of SuperSocket.Common.BinaryUtil</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.CloneRangeOf1IListOfM0Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[]})">
            <summary>Sets the shim of BinaryUtil.CloneRange(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.EndsWithOf1IListOfM0Int32Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Boolean})">
            <summary>Sets the shim of BinaryUtil.EndsWith(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.EndsWithOf1IListOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0[],System.Boolean})">
            <summary>Sets the shim of BinaryUtil.EndsWith(IList`1&lt;!!0&gt; source, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.IndexOfOf1IListOfM0M0Int32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0,System.Int32,System.Int32,System.Int32})">
            <summary>Sets the shim of BinaryUtil.IndexOf(IList`1&lt;!!0&gt; source, !!0 target, Int32 pos, Int32 length)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.SearchMarkOf1IListOfM0Int32Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Nullable{System.Int32}})">
            <summary>Sets the shim of BinaryUtil.SearchMark(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.SearchMarkOf1IListOfM0Int32Int32M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Int32,System.Nullable{System.Int32}})">
            <summary>Sets the shim of BinaryUtil.SearchMark(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark, Int32 matched)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.SearchMarkOf1IListOfM0Int32Int32SearchMarkStateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,SuperSocket.Common.SearchMarkState{``0},System.Int32})">
            <summary>Sets the shim of BinaryUtil.SearchMark(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, SearchMarkState`1&lt;!!0&gt; searchState)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.SearchMarkOf1IListOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0[],System.Nullable{System.Int32}})">
            <summary>Sets the shim of BinaryUtil.SearchMark(IList`1&lt;!!0&gt; source, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.StartsWithOf1IListOfM0Int32Int32M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0[],System.Int32})">
            <summary>Sets the shim of BinaryUtil.StartsWith(IList`1&lt;!!0&gt; source, Int32 offset, Int32 length, !!0[] mark)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBinaryUtil.StartsWithOf1IListOfM0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},``0[],System.Int32})">
            <summary>Sets the shim of BinaryUtil.StartsWith(IList`1&lt;!!0&gt; source, !!0[] mark)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBinaryUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimBufferManager">
            <summary>Shim type of SuperSocket.Common.BufferManager</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBufferManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBufferManager.#ctor(SuperSocket.Common.BufferManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBufferManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimBufferManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.ConstructorInt32Int32">
            <summary>Sets the shim of BufferManager.BufferManager(Int32 totalBytes, Int32 bufferSize)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.FreeBufferSocketAsyncEventArgs">
            <summary>Sets the shim of BufferManager.FreeBuffer(SocketAsyncEventArgs args)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.InitBuffer">
            <summary>Sets the shim of BufferManager.InitBuffer()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.SetBufferSocketAsyncEventArgs">
            <summary>Sets the shim of BufferManager.SetBuffer(SocketAsyncEventArgs args)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimBufferManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.AllInstances.FreeBufferSocketAsyncEventArgs">
            <summary>Sets the shim of BufferManager.FreeBuffer(SocketAsyncEventArgs args)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.AllInstances.InitBuffer">
            <summary>Sets the shim of BufferManager.InitBuffer()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimBufferManager.AllInstances.SetBufferSocketAsyncEventArgs">
            <summary>Sets the shim of BufferManager.SetBuffer(SocketAsyncEventArgs args)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimConfigurationElementBase">
            <summary>Shim type of SuperSocket.Common.ConfigurationElementBase</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationElementBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationElementBase.#ctor(SuperSocket.Common.ConfigurationElementBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationElementBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationElementBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.Constructor">
            <summary>Sets the shim of ConfigurationElementBase.ConfigurationElementBase()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.ConstructorBoolean">
            <summary>Sets the shim of ConfigurationElementBase.ConfigurationElementBase(Boolean nameRequired)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.DeserializeElementXmlReaderBoolean">
            <summary>Sets the shim of ConfigurationElementBase.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.NameGet">
            <summary>Sets the shim of ConfigurationElementBase.get_Name()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of ConfigurationElementBase.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of ConfigurationElementBase.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.OptionElementsGet">
            <summary>Sets the shim of ConfigurationElementBase.get_OptionElements()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.OptionElementsSetNameValueCollection">
            <summary>Sets the shim of ConfigurationElementBase.set_OptionElements(NameValueCollection value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.OptionsGet">
            <summary>Sets the shim of ConfigurationElementBase.get_Options()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.OptionsSetNameValueCollection">
            <summary>Sets the shim of ConfigurationElementBase.set_Options(NameValueCollection value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.DeserializeElementXmlReaderBoolean">
            <summary>Sets the shim of ConfigurationElementBase.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.NameGet">
            <summary>Sets the shim of ConfigurationElementBase.get_Name()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the shim of ConfigurationElementBase.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the shim of ConfigurationElementBase.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.OptionElementsGet">
            <summary>Sets the shim of ConfigurationElementBase.get_OptionElements()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.OptionElementsSetNameValueCollection">
            <summary>Sets the shim of ConfigurationElementBase.set_OptionElements(NameValueCollection value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.OptionsGet">
            <summary>Sets the shim of ConfigurationElementBase.get_Options()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationElementBase.AllInstances.OptionsSetNameValueCollection">
            <summary>Sets the shim of ConfigurationElementBase.set_Options(NameValueCollection value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimConfigurationExtension">
            <summary>Shim type of SuperSocket.Common.ConfigurationExtension</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationExtension.DeserializeOf1M0XmlReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Xml.XmlReader})">
            <summary>Sets the shim of ConfigurationExtension.Deserialize(!!0 section, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimConfigurationExtension.GetChildConfigOf1NameValueCollectionString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Specialized.NameValueCollection,System.String,``0})">
            <summary>Sets the shim of ConfigurationExtension.GetChildConfig(NameValueCollection childElements, String childConfigName)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationExtension.GetConfigSourceConfigurationElement">
            <summary>Sets the shim of ConfigurationExtension.GetConfigSource(ConfigurationElement config)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationExtension.GetValueNameValueCollectionString">
            <summary>Sets the shim of ConfigurationExtension.GetValue(NameValueCollection collection, String key)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimConfigurationExtension.GetValueNameValueCollectionStringString">
            <summary>Sets the shim of ConfigurationExtension.GetValue(NameValueCollection collection, String key, String defaultValue)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimDictionaryExtension">
            <summary>Shim type of SuperSocket.Common.DictionaryExtension</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimDictionaryExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimDictionaryExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimDictionaryExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimDictionaryExtension.GetValueOf1IDictionaryOfObjectObjectObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.Object,System.Object},System.Object,``0})">
            <summary>Sets the shim of DictionaryExtension.GetValue(IDictionary`2&lt;Object,Object&gt; dictionary, Object key)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimDictionaryExtension.GetValueOf1IDictionaryOfObjectObjectObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.Object,System.Object},System.Object,``0,``0})">
            <summary>Sets the shim of DictionaryExtension.GetValue(IDictionary`2&lt;Object,Object&gt; dictionary, Object key, !!0 defaultValue)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimDictionaryExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimErrorEventArgs">
            <summary>Shim type of SuperSocket.Common.ErrorEventArgs</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimErrorEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimErrorEventArgs.#ctor(SuperSocket.Common.ErrorEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimErrorEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimErrorEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimErrorEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimErrorEventArgs.ConstructorException">
            <summary>Sets the shim of ErrorEventArgs.ErrorEventArgs(Exception exception)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimErrorEventArgs.ConstructorString">
            <summary>Sets the shim of ErrorEventArgs.ErrorEventArgs(String message)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimErrorEventArgs.ExceptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Exception()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimErrorEventArgs.ExceptionSetException">
            <summary>Sets the shim of ErrorEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimErrorEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimErrorEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Exception()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimErrorEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of ErrorEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2">
            <summary>Shim type of SuperSocket.Common.GenericConfigurationElementCollection`2</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.#ctor(SuperSocket.Common.GenericConfigurationElementCollection{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.Constructor">
            <summary>Sets the shim of GenericConfigurationElementCollection`2.GenericConfigurationElementCollection`2()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.GetElementKeyConfigurationElement">
            <summary>Sets the shim of GenericConfigurationElementCollection`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollection`2.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of GenericConfigurationElementCollection`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2">
            <summary>Shim type of SuperSocket.Common.GenericConfigurationElementCollectionBase`2</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.#ctor(SuperSocket.Common.GenericConfigurationElementCollectionBase{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.Constructor">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.GenericConfigurationElementCollectionBase`2()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.CreateNewElement">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.GetElementKeyConfigurationElement">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.GetEnumerator">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.ItemGetInt32">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.ItemSetInt32T0">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.AllInstances.CreateNewElement">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.AllInstances.GetEnumerator">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.AllInstances.ItemGetInt32">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimGenericConfigurationElementCollectionBase`2.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of GenericConfigurationElementCollectionBase`2.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimPlatform">
            <summary>Shim type of SuperSocket.Common.Platform</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimPlatform.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimPlatform.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimPlatform.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimPlatform.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimPlatform.IsMonoGet">
            <summary>Sets the shim of Platform.get_IsMono()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimPlatform.IsMonoSetBoolean">
            <summary>Sets the shim of Platform.set_IsMono(Boolean value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimPlatform.StaticConstructor">
            <summary>Sets the shim of Platform.Platform()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimPlatform.SupportSocketIOControlByCodeEnumGet">
            <summary>Sets the shim of Platform.get_SupportSocketIOControlByCodeEnum()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimPlatform.SupportSocketIOControlByCodeEnumSetBoolean">
            <summary>Sets the shim of Platform.set_SupportSocketIOControlByCodeEnum(Boolean value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSearchMarkState`1">
            <summary>Shim type of SuperSocket.Common.SearchMarkState`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSearchMarkState`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSearchMarkState`1.#ctor(SuperSocket.Common.SearchMarkState{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSearchMarkState`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSearchMarkState`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.ConstructorT0Array">
            <summary>Sets the shim of SearchMarkState`1.SearchMarkState`1(!0[] mark)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.MarkGet">
            <summary>Sets the shim of SearchMarkState`1.get_Mark()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.MarkSetT0Array">
            <summary>Sets the shim of SearchMarkState`1.set_Mark(!0[] value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.MatchedGet">
            <summary>Sets the shim of SearchMarkState`1.get_Matched()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.MatchedSetInt32">
            <summary>Sets the shim of SearchMarkState`1.set_Matched(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSearchMarkState`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.AllInstances.MarkGet">
            <summary>Sets the shim of SearchMarkState`1.get_Mark()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.AllInstances.MarkSetT0Array">
            <summary>Sets the shim of SearchMarkState`1.set_Mark(!0[] value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.AllInstances.MatchedGet">
            <summary>Sets the shim of SearchMarkState`1.get_Matched()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSearchMarkState`1.AllInstances.MatchedSetInt32">
            <summary>Sets the shim of SearchMarkState`1.set_Matched(Int32 value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSendingQueue">
            <summary>Shim type of SuperSocket.Common.SendingQueue</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.#ctor(SuperSocket.Common.SendingQueue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.Bind(System.Collections.Generic.ICollection{System.ArraySegment{System.Byte}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.Bind(System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueue.Bind(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AddArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Add(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.CapacityGet">
            <summary>Sets the shim of SendingQueue.get_Capacity()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.Clear">
            <summary>Sets the shim of SendingQueue.Clear()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.ConstructorArraySegmentOfByteArrayInt32Int32">
            <summary>Sets the shim of SendingQueue.SendingQueue(ArraySegment`1&lt;Byte&gt;[] globalQueue, Int32 offset, Int32 capacity)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.ContainsArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Contains(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.CopyToArraySegmentOfByteArrayInt32">
            <summary>Sets the shim of SendingQueue.CopyTo(ArraySegment`1&lt;Byte&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.CountGet">
            <summary>Sets the shim of SendingQueue.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.EnqueueArraySegmentOfByteUInt16">
            <summary>Sets the shim of SendingQueue.Enqueue(ArraySegment`1&lt;Byte&gt; item, UInt16 trackID)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.EnqueueIListOfArraySegmentOfByteUInt16">
            <summary>Sets the shim of SendingQueue.Enqueue(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items, UInt16 trackID)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.GetEnumerator">
            <summary>Sets the shim of SendingQueue.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.GlobalQueueGet">
            <summary>Sets the shim of SendingQueue.get_GlobalQueue()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.IndexOfArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.IndexOf(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.InsertInt32ArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Insert(Int32 index, ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.IsReadOnlyGet">
            <summary>Sets the shim of SendingQueue.get_IsReadOnly()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.ItemGetInt32">
            <summary>Sets the shim of SendingQueue.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.ItemSetInt32ArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.set_Item(Int32 index, ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.OffsetGet">
            <summary>Sets the shim of SendingQueue.get_Offset()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.PositionGet">
            <summary>Sets the shim of SendingQueue.get_Position()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.PositionSetInt32">
            <summary>Sets the shim of SendingQueue.set_Position(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.RemoveArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Remove(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.RemoveAtInt32">
            <summary>Sets the shim of SendingQueue.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.StartEnqueue">
            <summary>Sets the shim of SendingQueue.StartEnqueue()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.StaticConstructor">
            <summary>Sets the shim of SendingQueue.SendingQueue()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.StopEnqueue">
            <summary>Sets the shim of SendingQueue.StopEnqueue()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of SendingQueue.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.TrackIDGet">
            <summary>Sets the shim of SendingQueue.get_TrackID()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.AddArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Add(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.CapacityGet">
            <summary>Sets the shim of SendingQueue.get_Capacity()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.Clear">
            <summary>Sets the shim of SendingQueue.Clear()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.ContainsArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Contains(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.CopyToArraySegmentOfByteArrayInt32">
            <summary>Sets the shim of SendingQueue.CopyTo(ArraySegment`1&lt;Byte&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.CountGet">
            <summary>Sets the shim of SendingQueue.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.EnqueueArraySegmentOfByteUInt16">
            <summary>Sets the shim of SendingQueue.Enqueue(ArraySegment`1&lt;Byte&gt; item, UInt16 trackID)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.EnqueueIListOfArraySegmentOfByteUInt16">
            <summary>Sets the shim of SendingQueue.Enqueue(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; items, UInt16 trackID)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.GetEnumerator">
            <summary>Sets the shim of SendingQueue.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.GlobalQueueGet">
            <summary>Sets the shim of SendingQueue.get_GlobalQueue()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.IndexOfArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.IndexOf(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.InsertInt32ArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Insert(Int32 index, ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of SendingQueue.get_IsReadOnly()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SendingQueue.get_Item(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.ItemSetInt32ArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.set_Item(Int32 index, ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.OffsetGet">
            <summary>Sets the shim of SendingQueue.get_Offset()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.PositionGet">
            <summary>Sets the shim of SendingQueue.get_Position()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.PositionSetInt32">
            <summary>Sets the shim of SendingQueue.set_Position(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.RemoveArraySegmentOfByte">
            <summary>Sets the shim of SendingQueue.Remove(ArraySegment`1&lt;Byte&gt; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of SendingQueue.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.StartEnqueue">
            <summary>Sets the shim of SendingQueue.StartEnqueue()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.StopEnqueue">
            <summary>Sets the shim of SendingQueue.StopEnqueue()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of SendingQueue.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueue.AllInstances.TrackIDGet">
            <summary>Sets the shim of SendingQueue.get_TrackID()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator">
            <summary>Shim type of SuperSocket.Common.SendingQueueSourceCreator</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.#ctor(SuperSocket.Common.SendingQueueSourceCreator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.Bind(SuperSocket.Common.ISmartPoolSourceCreator{SuperSocket.Common.SendingQueue})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.ConstructorInt32">
            <summary>Sets the shim of SendingQueueSourceCreator.SendingQueueSourceCreator(Int32 sendingQueueSize)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.CreateInt32SendingQueueArrayOut">
            <summary>Sets the shim of SendingQueueSourceCreator.Create(Int32 size, SendingQueue[]&amp; poolItems)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSendingQueueSourceCreator.AllInstances.CreateInt32SendingQueueArrayOut">
            <summary>Sets the shim of SendingQueueSourceCreator.Create(Int32 size, SendingQueue[]&amp; poolItems)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSmartPool`1">
            <summary>Shim type of SuperSocket.Common.SmartPool`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPool`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPool`1.#ctor(SuperSocket.Common.SmartPool{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPool`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPool`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPool`1.Bind(SuperSocket.Common.IPoolInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPool`1.Bind(SuperSocket.Common.ISmartPool{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AvialableItemsCountGet">
            <summary>Sets the shim of SmartPool`1.get_AvialableItemsCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.Constructor">
            <summary>Sets the shim of SmartPool`1.SmartPool`1()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.IncreaseCapacity">
            <summary>Sets the shim of SmartPool`1.IncreaseCapacity()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.InitializeInt32Int32ISmartPoolSourceCreatorOfT0">
            <summary>Sets the shim of SmartPool`1.Initialize(Int32 minPoolSize, Int32 maxPoolSize, ISmartPoolSourceCreator`1&lt;!0&gt; sourceCreator)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.MaxPoolSizeGet">
            <summary>Sets the shim of SmartPool`1.get_MaxPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.MinPoolSizeGet">
            <summary>Sets the shim of SmartPool`1.get_MinPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.PushT0">
            <summary>Sets the shim of SmartPool`1.Push(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.TotalItemsCountGet">
            <summary>Sets the shim of SmartPool`1.get_TotalItemsCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.TryGetT0Out">
            <summary>Sets the shim of SmartPool`1.TryGet(!0&amp; item)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.AvialableItemsCountGet">
            <summary>Sets the shim of SmartPool`1.get_AvialableItemsCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.IncreaseCapacity">
            <summary>Sets the shim of SmartPool`1.IncreaseCapacity()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.InitializeInt32Int32ISmartPoolSourceCreatorOfT0">
            <summary>Sets the shim of SmartPool`1.Initialize(Int32 minPoolSize, Int32 maxPoolSize, ISmartPoolSourceCreator`1&lt;!0&gt; sourceCreator)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.MaxPoolSizeGet">
            <summary>Sets the shim of SmartPool`1.get_MaxPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.MinPoolSizeGet">
            <summary>Sets the shim of SmartPool`1.get_MinPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.PushT0">
            <summary>Sets the shim of SmartPool`1.Push(!0 item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.TotalItemsCountGet">
            <summary>Sets the shim of SmartPool`1.get_TotalItemsCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPool`1.AllInstances.TryGetT0Out">
            <summary>Sets the shim of SmartPool`1.TryGet(!0&amp; item)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSmartPoolSource">
            <summary>Shim type of SuperSocket.Common.SmartPoolSource</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPoolSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPoolSource.#ctor(SuperSocket.Common.SmartPoolSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPoolSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPoolSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSmartPoolSource.Bind(SuperSocket.Common.ISmartPoolSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.ConstructorObjectInt32">
            <summary>Sets the shim of SmartPoolSource.SmartPoolSource(Object source, Int32 itemsCount)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.CountGet">
            <summary>Sets the shim of SmartPoolSource.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.CountSetInt32">
            <summary>Sets the shim of SmartPoolSource.set_Count(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.SourceGet">
            <summary>Sets the shim of SmartPoolSource.get_Source()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.SourceSetObject">
            <summary>Sets the shim of SmartPoolSource.set_Source(Object value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSmartPoolSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.AllInstances.CountGet">
            <summary>Sets the shim of SmartPoolSource.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.AllInstances.CountSetInt32">
            <summary>Sets the shim of SmartPoolSource.set_Count(Int32 value)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.AllInstances.SourceGet">
            <summary>Sets the shim of SmartPoolSource.get_Source()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSmartPoolSource.AllInstances.SourceSetObject">
            <summary>Sets the shim of SmartPoolSource.set_Source(Object value)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimSocketEx">
            <summary>Shim type of SuperSocket.Common.SocketEx</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSocketEx.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSocketEx.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimSocketEx.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSocketEx.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSocketEx.SafeCloseSocket">
            <summary>Sets the shim of SocketEx.SafeClose(Socket socket)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSocketEx.SendDataSocketByteArray">
            <summary>Sets the shim of SocketEx.SendData(Socket client, Byte[] data)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimSocketEx.SendDataSocketByteArrayInt32Int32">
            <summary>Sets the shim of SocketEx.SendData(Socket client, Byte[] data, Int32 offset, Int32 length)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimStringExtension">
            <summary>Shim type of SuperSocket.Common.StringExtension</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimStringExtension.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimStringExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimStringExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToBooleanString">
            <summary>Sets the shim of StringExtension.ToBoolean(String source)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToBooleanStringBoolean">
            <summary>Sets the shim of StringExtension.ToBoolean(String source, Boolean defaultValue)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToDateTimeString">
            <summary>Sets the shim of StringExtension.ToDateTime(String source)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToDateTimeStringDateTime">
            <summary>Sets the shim of StringExtension.ToDateTime(String source, DateTime defaultValue)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToDecimalString">
            <summary>Sets the shim of StringExtension.ToDecimal(String source)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToDecimalStringDecimal">
            <summary>Sets the shim of StringExtension.ToDecimal(String source, Decimal defaultValue)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToInt32String">
            <summary>Sets the shim of StringExtension.ToInt32(String source)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToInt32StringInt32">
            <summary>Sets the shim of StringExtension.ToInt32(String source, Int32 defaultValue)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToLongString">
            <summary>Sets the shim of StringExtension.ToLong(String source)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToLongStringInt64">
            <summary>Sets the shim of StringExtension.ToLong(String source, Int64 defaultValue)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToShortString">
            <summary>Sets the shim of StringExtension.ToShort(String source)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimStringExtension.ToShortStringInt16">
            <summary>Sets the shim of StringExtension.ToShort(String source, Int16 defaultValue)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.ShimTheadPoolEx">
            <summary>Shim type of SuperSocket.Common.TheadPoolEx</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimTheadPoolEx.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimTheadPoolEx.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.ShimTheadPoolEx.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimTheadPoolEx.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.ShimTheadPoolEx.ResetThreadPoolNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32">
            <summary>Sets the shim of TheadPoolEx.ResetThreadPool(Nullable`1&lt;Int32&gt; maxWorkingThreads, Nullable`1&lt;Int32&gt; maxCompletionPortThreads, Nullable`1&lt;Int32&gt; minWorkingThreads, Nullable`1&lt;Int32&gt; minCompletionPortThreads)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubArraySegmentList">
            <summary>Stub type of SuperSocket.Common.ArraySegmentList</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubArraySegmentList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubArraySegmentList.InitializeStub">
            <summary>Initializes a new instance of type StubArraySegmentList</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubArraySegmentList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubArraySegmentList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubArraySegmentList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubArraySegmentList`1">
            <summary>Stub type of SuperSocket.Common.ArraySegmentList`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubArraySegmentList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubArraySegmentList`1.InitializeStub">
            <summary>Initializes a new instance of type StubArraySegmentList</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubArraySegmentList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubArraySegmentList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubArraySegmentList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubBufferManager">
            <summary>Stub type of SuperSocket.Common.BufferManager</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubBufferManager.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubBufferManager.InitializeStub">
            <summary>Initializes a new instance of type StubBufferManager</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubBufferManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubBufferManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubBufferManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubConfigurationElementBase">
            <summary>Stub type of SuperSocket.Common.ConfigurationElementBase</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementBase.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElementBase.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationElementBase</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElementBase.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElementBase.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementBase.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementBase.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubConfigurationElementBase.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubConfigurationElementBase.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubConfigurationElementBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubConfigurationElementBase.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubConfigurationElementBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubConfigurationElementBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubConfigurationElementBase.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubErrorEventArgs">
            <summary>Stub type of SuperSocket.Common.ErrorEventArgs</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubErrorEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubErrorEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubErrorEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubErrorEventArgs</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubErrorEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubErrorEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubErrorEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2">
            <summary>Stub type of SuperSocket.Common.GenericConfigurationElementCollection`2</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.CollectionTypeGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.CreateNewElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.CreateNewElement01">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ElementNameGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of GenericConfigurationElementCollection`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetElementKeyConfigurationElement">
            <summary>Sets the stub of GenericConfigurationElementCollection`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.InitializeStub">
            <summary>Initializes a new instance of type StubGenericConfigurationElementCollection</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsElementName(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsElementNameString">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ThrowOnDuplicateGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.CollectionType">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ElementName">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollection`2.ThrowOnDuplicate">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2">
            <summary>Stub type of SuperSocket.Common.GenericConfigurationElementCollectionBase`2</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.CollectionTypeGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.CreateNewElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.CreateNewElement01">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.CreateNewElement()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ElementNameGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetElementKeyConfigurationElement">
            <summary>Sets the stub of GenericConfigurationElementCollectionBase`2.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.InitializeStub">
            <summary>Initializes a new instance of type StubGenericConfigurationElementCollectionBase</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsElementName(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsElementNameString">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ThrowOnDuplicateGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.CollectionType">
            <summary>Sets the stub of ConfigurationElementCollection.get_CollectionType()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ElementName">
            <summary>Sets the stub of ConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubGenericConfigurationElementCollectionBase`2.ThrowOnDuplicate">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubIPoolInfo">
            <summary>Stub type of SuperSocket.Common.IPoolInfo</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubIPoolInfo.#ctor">
            <summary>Initializes a new instance of type StubIPoolInfo</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubIPoolInfo.AvialableItemsCountGet">
            <summary>Sets the stub of IPoolInfo.get_AvialableItemsCount()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubIPoolInfo.MaxPoolSizeGet">
            <summary>Sets the stub of IPoolInfo.get_MaxPoolSize()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubIPoolInfo.MinPoolSizeGet">
            <summary>Sets the stub of IPoolInfo.get_MinPoolSize()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubIPoolInfo.TotalItemsCountGet">
            <summary>Sets the stub of IPoolInfo.get_TotalItemsCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubIPoolInfo.ssc::SuperSocket#Common#IPoolInfo#AvialableItemsCount">
            <summary>Sets the stub of IPoolInfo.get_AvialableItemsCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubIPoolInfo.ssc::SuperSocket#Common#IPoolInfo#MaxPoolSize">
            <summary>Sets the stub of IPoolInfo.get_MaxPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubIPoolInfo.ssc::SuperSocket#Common#IPoolInfo#MinPoolSize">
            <summary>Sets the stub of IPoolInfo.get_MinPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubIPoolInfo.ssc::SuperSocket#Common#IPoolInfo#TotalItemsCount">
            <summary>Sets the stub of IPoolInfo.get_TotalItemsCount()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubISmartPool`1">
            <summary>Stub type of SuperSocket.Common.ISmartPool`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubISmartPool`1.#ctor">
            <summary>Initializes a new instance of type StubISmartPool</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPool`1.AvialableItemsCountGet">
            <summary>Sets the stub of IPoolInfo.get_AvialableItemsCount()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPool`1.InitializeInt32Int32ISmartPoolSourceCreatorOfT0">
            <summary>Sets the stub of ISmartPool`1.Initialize(Int32 minPoolSize, Int32 maxPoolSize, ISmartPoolSourceCreator`1&lt;!0&gt; sourceCreator)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPool`1.MaxPoolSizeGet">
            <summary>Sets the stub of IPoolInfo.get_MaxPoolSize()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPool`1.MinPoolSizeGet">
            <summary>Sets the stub of IPoolInfo.get_MinPoolSize()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPool`1.PushT0">
            <summary>Sets the stub of ISmartPool`1.Push(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubISmartPool`1.ssc::SuperSocket#Common#ISmartPool{T}#Initialize(System.Int32,System.Int32,SuperSocket.Common.ISmartPoolSourceCreator{`0})">
            <summary>Sets the stub of ISmartPool`1.Initialize(Int32 minPoolSize, Int32 maxPoolSize, ISmartPoolSourceCreator`1&lt;!0&gt; sourceCreator)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubISmartPool`1.ssc::SuperSocket#Common#ISmartPool{T}#Push(`0)">
            <summary>Sets the stub of ISmartPool`1.Push(!0 item)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubISmartPool`1.ssc::SuperSocket#Common#ISmartPool{T}#TryGet(`0@)">
            <summary>Sets the stub of ISmartPool`1.TryGet(!0&amp; item)</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPool`1.TotalItemsCountGet">
            <summary>Sets the stub of IPoolInfo.get_TotalItemsCount()</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPool`1.TryGetT0Out">
            <summary>Sets the stub of ISmartPool`1.TryGet(!0&amp; item)</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubISmartPool`1.ssc::SuperSocket#Common#IPoolInfo#AvialableItemsCount">
            <summary>Sets the stub of IPoolInfo.get_AvialableItemsCount()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubISmartPool`1.ssc::SuperSocket#Common#IPoolInfo#MaxPoolSize">
            <summary>Sets the stub of IPoolInfo.get_MaxPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubISmartPool`1.ssc::SuperSocket#Common#IPoolInfo#MinPoolSize">
            <summary>Sets the stub of IPoolInfo.get_MinPoolSize()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubISmartPool`1.ssc::SuperSocket#Common#IPoolInfo#TotalItemsCount">
            <summary>Sets the stub of IPoolInfo.get_TotalItemsCount()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubISmartPoolSource">
            <summary>Stub type of SuperSocket.Common.ISmartPoolSource</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubISmartPoolSource.#ctor">
            <summary>Initializes a new instance of type StubISmartPoolSource</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPoolSource.CountGet">
            <summary>Sets the stub of ISmartPoolSource.get_Count()</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubISmartPoolSource.ssc::SuperSocket#Common#ISmartPoolSource#Count">
            <summary>Sets the stub of ISmartPoolSource.get_Count()</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubISmartPoolSourceCreator`1">
            <summary>Stub type of SuperSocket.Common.ISmartPoolSourceCreator`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubISmartPoolSourceCreator`1.#ctor">
            <summary>Initializes a new instance of type StubISmartPoolSourceCreator</summary>
        </member>
        <member name="F:SuperSocket.Common.Fakes.StubISmartPoolSourceCreator`1.CreateInt32T0ArrayOut">
            <summary>Sets the stub of ISmartPoolSourceCreator`1.Create(Int32 size, !0[]&amp; poolItems)</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubISmartPoolSourceCreator`1.ssc::SuperSocket#Common#ISmartPoolSourceCreator{T}#Create(System.Int32,`0[]@)">
            <summary>Sets the stub of ISmartPoolSourceCreator`1.Create(Int32 size, !0[]&amp; poolItems)</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubSearchMarkState`1">
            <summary>Stub type of SuperSocket.Common.SearchMarkState`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSearchMarkState`1.#ctor(`0[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSearchMarkState`1.InitializeStub">
            <summary>Initializes a new instance of type StubSearchMarkState</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSearchMarkState`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSearchMarkState`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSearchMarkState`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubSendingQueueSourceCreator">
            <summary>Stub type of SuperSocket.Common.SendingQueueSourceCreator</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSendingQueueSourceCreator.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSendingQueueSourceCreator.InitializeStub">
            <summary>Initializes a new instance of type StubSendingQueueSourceCreator</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSendingQueueSourceCreator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSendingQueueSourceCreator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSendingQueueSourceCreator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubSmartPool`1">
            <summary>Stub type of SuperSocket.Common.SmartPool`1</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSmartPool`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSmartPool`1.InitializeStub">
            <summary>Initializes a new instance of type StubSmartPool</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSmartPool`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSmartPool`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSmartPool`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SuperSocket.Common.Fakes.StubSmartPoolSource">
            <summary>Stub type of SuperSocket.Common.SmartPoolSource</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSmartPoolSource.#ctor(System.Object,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SuperSocket.Common.Fakes.StubSmartPoolSource.InitializeStub">
            <summary>Initializes a new instance of type StubSmartPoolSource</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSmartPoolSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSmartPoolSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SuperSocket.Common.Fakes.StubSmartPoolSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
